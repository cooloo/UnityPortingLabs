<CodeSnippets
    xmlns="http://schemas.microsoft.com/VisualStudio/2008/CodeSnippet">
  <CodeSnippet Format="1.0.0">
    <Header>
      <Title>
        TileScheduleAll
      </Title>
    </Header>
    <Snippet>
      <Code Language="CSharp">
        <![CDATA[private void TileScheduleOneTime()
        {
            ShellTileSchedule tileSchedule = new ShellTileSchedule();
            tileSchedule.Recurrence = UpdateRecurrence.Onetime;
            tileSchedule.StartTime = DateTime.Now;
            string imageUri = GetImageUri();
            tileSchedule.RemoteImageUri = new Uri(imageUri);

            tileSchedule.Start();
        }

        private void TileScheduleIndefinite()
        {
            ShellTileSchedule tileSchedule = new ShellTileSchedule();

            // Updates will happen on a fixed interval. 
            tileSchedule.Recurrence = UpdateRecurrence.Interval;

            // Updates will happen every hour.  Because MaxUpdateCount is not set, the schedule will run indefinitely.
            tileSchedule.Interval = UpdateInterval.EveryHour;

            string imageUri = GetImageUri();
            tileSchedule.RemoteImageUri = new Uri(imageUri);
            tileSchedule.Start();
        }

        private void TileScheduleFinite()
        {
            ShellTileSchedule tileSchedule = new ShellTileSchedule();

            // Updates will happen on a fixed interval.
            tileSchedule.Recurrence = UpdateRecurrence.Interval;

            // Updates will happen every hour.
            tileSchedule.Interval = UpdateInterval.EveryHour;

            // Do a maximum of 50 updates and then stop.
            tileSchedule.MaxUpdateCount = 5;

            string imageUri = GetImageUri();
            tileSchedule.RemoteImageUri = new Uri(imageUri);
            tileSchedule.Start();
        }]]>
      </Code>
    </Snippet>
  </CodeSnippet>
</CodeSnippets>